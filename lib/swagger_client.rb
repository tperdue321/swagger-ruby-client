=begin
#Smart Data Management

#RESTful API that can be used to access Kannegiesser's master data back end.

OpenAPI spec version: 0.4.3

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

# Common files
require 'swagger_client/api_client'
require 'swagger_client/api_error'
require 'swagger_client/version'
require 'swagger_client/configuration'

# Models
require 'swagger_client/models/article'
require 'swagger_client/models/article_grouping'
require 'swagger_client/models/auto_id_model_base'
require 'swagger_client/models/category'
require 'swagger_client/models/category_grouping'
require 'swagger_client/models/color_model_base'
require 'swagger_client/models/common_model_base'
require 'swagger_client/models/customer'
require 'swagger_client/models/customer_grouping'
require 'swagger_client/models/employee'
require 'swagger_client/models/employee_grouping'
require 'swagger_client/models/grouping_model_base'
require 'swagger_client/models/groupings_model_base'
require 'swagger_client/models/id_model_base'
require 'swagger_client/models/key_value_model_base'
require 'swagger_client/models/key_values'
require 'swagger_client/models/name_model_base'
require 'swagger_client/models/patch_operation'
require 'swagger_client/models/short_name_model_base'

# APIs
require 'swagger_client/api/article_groupings_api'
require 'swagger_client/api/articles_api'
require 'swagger_client/api/categories_api'
require 'swagger_client/api/category_groupings_api'
require 'swagger_client/api/customer_groupings_api'
require 'swagger_client/api/customers_api'
require 'swagger_client/api/employee_groupings_api'
require 'swagger_client/api/employees_api'

module SwaggerClient
  class << self
    # Customize default settings for the SDK using block.
    #   SwaggerClient.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
